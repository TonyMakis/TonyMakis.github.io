{"version":3,"sources":["ProjectCardComponent/ProjectCardStyles.js","ExpansionPanelsComponent/LanguageIcon.jsx","dataFormatting.js","ExpansionPanelsComponent/AccordionStyles.js","ExpansionPanelsComponent/Accordions.jsx","ProjectCardComponent/ProjectCard.jsx","dataFetchFunctions.js","LoadSpinner.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","flexGrow","backgroundColor","borderRadius","boxShadow","paperBack","background","padding","paddingBottom","fancyTitle","color","fontFamily","fontSize","fontWeight","coloredArrowEmoji","flexing","display","heading","flexBasis","flexShrink","secondaryHeading","LanguageIcon","langIcon","lang","style","paddingRight","className","Typography","propTypes","PropTypes","string","defaultProps","formatCommitsToPieData","commits","commitData","labels","datasets","data","hoverBackgroundColor","userCounts","defaultSeed","i","length","user","Object","entries","k","v","randColorGenerated","randomColor","seed","push","formatLangsImgData","langs","langNames","keys","Array","isArray","theme","root","marginLeft","marginRight","marginBottom","width","beautifyBackground","langBadge","marginTop","textShadow","typography","pxToRem","Accordions","contributors","languagesUsed","classes","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","align","map","contrib","Link","href","target","styles","legend","options","showLines","ProjectCard","title","description","projectUrl","created","Card","CardContent","gutterBottom","Paper","elevation","component","toLocaleString","month","getDate","getFullYear","CardActionArea","CardActions","Button","variant","button","startIcon","fetchAll","urls","Promise","all","url","fetch","then","res","json","filterData","d","newD","contribs","created_at","html_url","name","parseContribsIntoData","con","users","j","login","parseCommitsIntoData","com","committer","sha","parseLangsIntoData","languages","fetchExtras","a","contributorsUrls","languagesUrls","commitsUrls","contributors_url","languages_url","commits_url","slice","Date","LoadSpinner","useLoading","loading","indicator","containerProps","indicatorEl","fetchProjects","fullData","App","props","state","projectData","isLoading","this","setState","content","Grid","container","project","item","xs","sm","md","lg","xl","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c447e968.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n// eslint-disable-next-line no-unused-vars\n\nconst useStyles = makeStyles({\n  card: {\n    flexGrow: 1,\n    backgroundColor: '#f7d2ff',\n    borderRadius: 12,\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n                0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n    // transition: 'all .2s ease-in-out',\n    // '&:hover': {\n    //   transform: 'scale(1.01)',\n    // },\n  },\n  paperBack: {\n    background: 'linear-gradient(45deg, #5edf4d96, #58ccdc)',\n    borderRadius: 16,\n    padding: '0.8em',\n    paddingBottom: '0.5em',\n  },\n  fancyTitle: {\n    color: '#122715',\n    fontFamily: 'Segoe UI',\n    fontSize: '1.4em',\n    fontWeight: 'bold',\n  },\n  coloredArrowEmoji: {\n    color: '#3f51b5',\n    fontSize: '0.8em',\n  },\n  flexing: {\n    display: 'flex',\n  },\n  heading: {\n    fontSize: '0.8em',\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: '0.8em',\n  },\n});\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nexport default function LanguageIcon({ lang }) {\n  let langIcon;\n\n  if (lang === 'C') {\n    langIcon = (<i style={{ fontSize: '3.5em', paddingRight: '0.5em' }} className=\"devicon-c-plain\" />);\n  } else if (lang === 'C++') {\n    langIcon = (<i style={{ fontSize: '3.5em', paddingRight: '0.5em' }} className=\"devicon-cplusplus-plain\" />);\n  } else if (lang === 'Java') {\n    langIcon = (<i style={{ fontSize: '3.5em', paddingRight: '0.5em' }} className=\"devicon-java-plain-wordmark\" />);\n  } else if (lang === 'JavaScript') {\n    langIcon = (<i style={{ fontSize: '3.5em', paddingRight: '0.5em' }} className=\"devicon-javascript-plain\" />);\n  } else if (lang === 'HTML') {\n    langIcon = (<i style={{ fontSize: '3.5em', paddingRight: '0.5em' }} className=\"devicon-html5-plain-wordmark\" />);\n  } else if (lang === 'CSS') {\n    langIcon = (<i style={{ fontSize: '3.5em', paddingRight: '0.5em' }} className=\"devicon-css3-plain-wordmark\" />);\n  } else if (lang === 'Empty') {\n    langIcon = (<Typography>Github doesn&apos;t have any recorded!</Typography>);\n  }\n\n  return (\n    <>{ langIcon }</>\n  );\n}\n\nLanguageIcon.propTypes = {\n  lang: PropTypes.string,\n};\n\nLanguageIcon.defaultProps = {\n  lang: '',\n};\n","import randomColor from 'randomcolor';\n\n/* eslint-disable no-restricted-syntax */\nexport function formatCommitsToPieData(commits) {\n  const commitData = {\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      hoverBackgroundColor: [],\n    }],\n  };\n\n  const userCounts = {};\n  let defaultSeed = 'chappie';\n\n  for (let i = 0; i < commits.length; i += 1) {\n    userCounts[commits[i].user] = 1 + (userCounts[commits[i].user] || 0);\n  }\n\n  for (const [k, v] of Object.entries(userCounts)) {\n    defaultSeed = `${defaultSeed}!`;\n    const randColorGenerated = randomColor(\n      { seed: defaultSeed },\n    );\n    commitData.labels.push(k);\n    commitData.datasets[0].data.push(v);\n    commitData.datasets[0].backgroundColor.push(randColorGenerated);\n    commitData.datasets[0].hoverBackgroundColor.push(randColorGenerated);\n  }\n\n  return commitData;\n}\n\nexport function formatLangsImgData(langs) {\n  const langNames = [];\n  for (const k of Object.keys(langs[0])) {\n    langNames.push(k);\n  }\n  if (Array.isArray(langNames) && !langNames.length) {\n    langNames.push('Empty');\n  }\n  return langNames;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n// eslint-disable-next-line no-unused-vars\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '1em',\n    width: '93%',\n  },\n  beautifyBackground: {\n    color: 'white',\n    backgroundColor: '#3f51b5',\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n                0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n  },\n  langBadge: {\n    marginTop: '0.5em',\n    marginLeft: '0.5em',\n    background: 'linear-gradient(45deg, #69ff5596, #8af1ff)',\n    borderRadius: 4,\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n    0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n  },\n  heading: {\n    textShadow: '1px 1px 0px rgba(0,0,0,0.2)',\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: 'white',\n  },\n  secondaryHeading: {\n    textShadow: '1px 1px 0px rgba(0,0,0,0.2)',\n    fontSize: theme.typography.pxToRem(15),\n    color: 'white',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport { Doughnut } from 'react-chartjs-2';\n\nimport LanguageIcon from './LanguageIcon';\n\nimport { formatCommitsToPieData, formatLangsImgData } from '../dataFormatting';\nimport useStyles from './AccordionStyles';\n\nexport default function Accordions({ contributors, commits, languagesUsed }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const barLegendOpts = {\n    display: false,\n  };\n  const barChartOptions = {\n    showLines: false,\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Accordion\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}><PeopleAltIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Contributors</strong>\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.beautifyBackground} align=\"left\">\n          <ul>\n            {contributors.map((contrib) => (\n              <li key={contrib.id}>\n                <Link\n                  href={`https://github.com/${contrib.user}`}\n                  color=\"inherit\"\n                  target=\"_blank\"\n                >\n                  {contrib.user}\n                </Link>\n              </li>\n            )) || 'No contributors found!'}\n          </ul>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}><TrackChangesIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Commit Info</strong>\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.beautifyBackground} align=\"center\">\n          <Doughnut\n            styles={{ background: '#f7d2ff' }}\n            legend={barLegendOpts}\n            options={barChartOptions}\n            data={formatCommitsToPieData(commits)}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel3'}\n        onChange={handleChange('panel3')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Typography className={classes.heading}><CodeIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Dev. Languages</strong>\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.beautifyBackground} align=\"left\">\n          {formatLangsImgData(languagesUsed).map((lang) => (\n            <LanguageIcon lang={lang} key={lang} />\n          ))}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nAccordions.propTypes = {\n  contributors: PropTypes.arrayOf(PropTypes.object),\n  commits: PropTypes.arrayOf(PropTypes.object),\n  languagesUsed: PropTypes.arrayOf(PropTypes.object),\n};\n\nAccordions.defaultProps = {\n  contributors: [],\n  commits: [],\n  languagesUsed: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent,\n  // CardMedia,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\nimport useStyles from './ProjectCardStyles';\n\nimport Accordions from '../ExpansionPanelsComponent/Accordions';\n\nexport default function ProjectCard({\n  title, description, projectUrl, languagesUsed, contributors, commits, created,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={classes.card}\n    >\n      <CardContent>\n        <Typography\n          className={classes.fancyTitle}\n          gutterBottom\n        >\n          {title || 'Title TBA . . .'}\n        </Typography>\n        <Paper elevation={3} className={classes.paperBack}>\n          <Typography>\n            {description || 'Description TBD . . .'}\n          </Typography>\n          <br />\n          <Typography component=\"h3\">\n            {'📅 '}\n            <strong>\n              <em>\n                {`\n                  ${created.toLocaleString('default', { month: 'long' })}\n                  ${created.getDate()},\n                  ${created.getFullYear()}\n                `}\n              </em>\n            </strong>\n            {/* &emsp;\n            {'⌛ '}\n            <strong>\n              <em>\n                {`${created.toLocaleString('en-US', { hour: 'numeric', hour12: true })}`}\n              </em>\n            </strong> */}\n          </Typography>\n          <br />\n          <CardActionArea className={classes.flexing}>\n            <CardActions>\n              <Button\n                href={`${projectUrl}/tree/master`}\n                target=\"_blank\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<GitHubIcon />}\n              >\n                SOURCE\n              </Button>\n              <Button\n                href={\n                  title === 'PrettyPlaylister'\n                    ? 'https://www.prettyplaylister.com'\n                    : `https://TonyMakis.github.io/${title}`\n                }\n                target=\"_blank\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<ComputerIcon />}\n              >\n                DEMO\n              </Button>\n            </CardActions>\n          </CardActionArea>\n        </Paper>\n      </CardContent>\n      {/* TODO: PICTURE GENERATION FOR THUMBNAIL (htmltocavas???) */}\n      {/* <CardMedia\n        component=\"img\"\n        alt={name}\n        image={imageUrl}\n      /> */}\n      {/* <TabPanelsGroup contributors={contributors} /> */}\n      <Accordions\n        contributors={contributors}\n        commits={commits}\n        languagesUsed={languagesUsed}\n      />\n    </Card>\n  );\n}\n\n// Validation of props passed to @UserCard\n//  -> Including Some Default Values:\n\nProjectCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  projectUrl: PropTypes.string,\n  languagesUsed: PropTypes.arrayOf(PropTypes.object),\n  contributors: PropTypes.arrayOf(PropTypes.object),\n  commits: PropTypes.arrayOf(PropTypes.object),\n  created: PropTypes.instanceOf(Date),\n};\n\nProjectCard.defaultProps = {\n  title: '',\n  description: '',\n  projectUrl: '',\n  languagesUsed: [],\n  contributors: [],\n  commits: [],\n  created: new Date(),\n};\n","// This next comment is for ESLint, b/c I am writing fetched results into original data:\n/* eslint-disable no-param-reassign */\n\n/* Takes an array of urls to fetch, and does fetch all,\n   returning results in JSONic array */\nfunction fetchAll(urls) {\n  if (urls) {\n    return Promise.all(\n      urls.map((url) => fetch(url).then((res) => res.json())),\n    );\n  }\n  return [];\n}\n\n/* Simply make a new data object with props actually needed */\nfunction filterData(d) {\n  const newD = [];\n  for (let i = 0; i < d.length; i += 1) {\n    newD.push({});\n    newD[i].commits = d[i].commits;\n    newD[i].contribs = d[i].contribs;\n    newD[i].created_at = d[i].created_at;\n    newD[i].description = d[i].description;\n    newD[i].html_url = d[i].html_url;\n    newD[i].id = d[i].id;\n    newD[i].langs = d[i].langs;\n    newD[i].name = d[i].name;\n  }\n  return newD;\n}\n\nfunction parseContribsIntoData(data, con) {\n  let users = [];\n  for (let i = 0; i < con.length; i += 1) {\n    users = [];\n    for (let j = 0; j < con[i].length; j += 1) {\n      if (con[i][j]) {\n        users.push({\n          id: con[i][j].id,\n          user: con[i][j].login,\n        });\n      }\n    }\n    data[i].contribs = users;\n  }\n}\n\nfunction parseCommitsIntoData(data, com) {\n  let commits = [];\n  for (let i = 0; i < com.length; i += 1) {\n    commits = [];\n    for (let j = 0; j < com[i].length; j += 1) {\n      if (com[i][j].committer) {\n        commits.push({\n          id: com[i][j].sha,\n          user: com[i][j].committer.login,\n        });\n      }\n    }\n    data[i].commits = commits;\n  }\n}\n\nfunction parseLangsIntoData(data, langs) {\n  let languages = [];\n  for (let i = 0; i < langs.length; i += 1) {\n    languages = [];\n    languages.push(langs[i]);\n    data[i].langs = languages;\n  }\n}\n\nexport default async function fetchExtras(data) {\n  const contributorsUrls = [];\n  const languagesUrls = [];\n  const commitsUrls = [];\n\n  let i = 0;\n  if (data) {\n    for (i = 0; i < data.length; i += 1) {\n      contributorsUrls.push(data[i].contributors_url);\n    }\n    for (i = 0; i < data.length; i += 1) {\n      languagesUrls.push(data[i].languages_url);\n    }\n    for (i = 0; i < data.length; i += 1) {\n      commitsUrls.push(data[i].commits_url.slice(0, -6));\n    }\n  }\n\n  await fetchAll(contributorsUrls).then((con) => parseContribsIntoData(data, con));\n\n  await fetchAll(languagesUrls).then((langs) => parseLangsIntoData(data, langs));\n\n  await fetchAll(commitsUrls).then((com) => parseCommitsIntoData(data, com));\n\n  return filterData(data);\n}\n","import React from 'react';\n\nimport { useLoading, BallTriangle } from '@agney/react-loading';\n\nexport default function LoadSpinner() {\n  const { containerProps, indicatorEl } = useLoading({\n    loading: true,\n    indicator: <BallTriangle width=\"155\" />,\n  });\n\n  return (\n    <section\n      id=\"LoadSpinner\"\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...containerProps}\n    >\n      {indicatorEl}\n    </section>\n  );\n}\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport ProjectCard from './ProjectCardComponent/ProjectCard';\n\nimport fetchExtras from './dataFetchFunctions';\n\nimport LoadSpinner from './LoadSpinner';\n\nasync function fetchProjects(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n  const fullData = await fetchExtras(data);\n  return fullData;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectData: [],\n      isLoading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const { isLoading } = this.state;\n    if (isLoading) {\n      const data = await fetchProjects('https://api.github.com/users/TonyMakis/repos');\n      this.setState({\n        projectData: data,\n        isLoading: false,\n      });\n    }\n  }\n\n  render() {\n    let content;\n    const { isLoading, projectData } = this.state;\n    if (isLoading) {\n      content = (<div className=\"center\"><LoadSpinner /></div>);\n    } else {\n      content = (\n        <div className=\"projects\">\n          <h1>My Public Projects</h1>\n          <Grid\n            container\n            style={{ padding: '0.5em' }}\n          >\n            {projectData.map((project) => (\n              <Grid\n                item\n                style={{ padding: '2em' }}\n                // Tell each card how many cols to span / device size\n                xs={12}\n                sm={12}\n                md={6}\n                lg={4}\n                xl={3}\n                key={project.id}\n              >\n                <ProjectCard\n                  title={project.name}\n                  description={project.description}\n                  projectUrl={project.html_url}\n                  languagesUsed={project.langs}\n                  contributors={project.contribs}\n                  commits={project.commits}\n                  created={new Date(project.created_at)}\n                  key={project.id}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n\n    return (<div id=\"app\">{content}</div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  || window.location.hostname === '[::1]' // [::1] is the IPv6 localhost address.\n  || window.location.hostname.match( // 127.0.0.0/8 are considered localhost for IPv4.\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}