{"version":3,"sources":["ProjectCardComponent/ProjectCardStyles.js","dataFormatting.js","ExpansionPanelsComponent/CustomExpansionPanelsStyles.js","ExpansionPanelsComponent/CustomExpansionPanels.jsx","ProjectCardComponent/ProjectCard.jsx","dataFetchFunctions.js","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","flexGrow","backgroundColor","borderRadius","boxShadow","paperBack","background","padding","paddingBottom","fancyTitle","color","fontFamily","fontSize","fontWeight","coloredArrowEmoji","flexing","display","heading","flexBasis","flexShrink","secondaryHeading","formatCommitsToPieData","commits","userCounts","commitData","defaultSeed","i","length","user","Object","entries","k","v","push","title","value","randomColor","seed","theme","root","marginLeft","marginRight","marginBottom","width","beautifyBackground","langBadge","piechart","textShadow","typography","pxToRem","CustomExpansionPanels","contributors","languagesUsed","classes","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","className","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","style","aria-controls","id","Typography","ExpansionPanelDetails","align","map","contrib","key","Link","href","target","data","label","dataEntry","langs","langsUrls","keys","toLowerCase","formatLangsImgData","langUrl","alt","src","ProjectCard","description","projectUrl","created","Card","CardContent","gutterBottom","Paper","elevation","component","toLocaleString","month","getDate","getFullYear","CardActionArea","CardActions","Button","variant","button","startIcon","fetchAll","urls","Promise","all","url","fetch","then","res","json","filterData","d","newD","contribs","created_at","html_url","name","parseContribsIntoData","con","users","j","login","parseCommitsIntoData","com","committer","sha","parseLangsIntoData","languages","fetchExtras","a","contributorsUrls","languagesUrls","commitsUrls","contributors_url","languages_url","commits_url","slice","App","projectData","setProjectData","useEffect","fetchProjects","Grid","container","project","item","xs","sm","md","lg","xl","Date","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4WAGeA,EAAYC,YAAW,CACpCC,KAAM,CACJC,SAAU,EACVC,gBAAiB,UACjBC,aAAc,GACdC,UAAU,qFAOZC,UAAW,CACTC,WAAY,6CACZH,aAAc,GACdI,QAAS,QACTC,cAAe,SAEjBC,WAAY,CACVC,MAAO,UACPC,WAAY,WACZC,SAAU,QACVC,WAAY,QAEdC,kBAAmB,CACjBJ,MAAO,UACPE,SAAU,SAEZG,QAAS,CACPC,QAAS,QAEXC,QAAS,CACPL,SAAU,QACVM,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBR,SAAU,W,6HCrCP,SAASS,EAAuBC,GAKrC,IAJA,IAAMC,EAAa,GACbC,EAAa,GACfC,EAAc,YAETC,EAAI,EAAGA,EAAIJ,EAAQK,OAAQD,GAAK,EACvCH,EAAWD,EAAQI,GAAGE,MAAQ,GAAKL,EAAWD,EAAQI,GAAGE,OAAS,GAGpE,cAAqBC,OAAOC,QAAQP,GAApC,eAAiD,CAAC,IAAD,sBAArCQ,EAAqC,KAAlCC,EAAkC,KAC/CP,EAAW,UAAMA,EAAN,KACXD,EAAWS,KAAK,CACdC,MAAOH,EACPI,MAAOH,EACPtB,MAAO0B,IACL,CAAEC,KAAMZ,MAKd,OAAOD,ECpBM1B,MAAYC,aAAW,SAACuC,GAAD,MAAY,CAChDC,KAAM,CACJC,WAAY,OACZC,YAAa,OACbC,aAAc,MACdC,MAAO,OAETC,mBAAoB,CAClBlC,MAAO,QACPR,gBAAiB,UACjBE,UAAU,qFAGZyC,UAAW,CACTzC,UAAU,yEAGZ0C,SAAU,CACRH,MAAO,MACPxC,aAAc,OACdqC,WAAY,OACZC,YAAa,OACb7B,SAAU,QACVC,WAAY,OACZT,UAAU,yEAGZa,QAAS,CACP8B,WAAY,8BACZnC,SAAU0B,EAAMU,WAAWC,QAAQ,IACnC/B,UAAW,SACXC,WAAY,EACZT,MAAO,SAETU,iBAAkB,CAChB2B,WAAY,8BACZnC,SAAU0B,EAAMU,WAAWC,QAAQ,IACnCvC,MAAO,aCpBI,SAASwC,EAAT,GAIX,IAHFC,EAGC,EAHDA,aACA7B,EAEC,EAFDA,QACA8B,EACC,EADDA,cAEMC,EAAUvD,IADf,EAE+BwD,IAAMC,UAAS,GAF9C,mBAEMC,EAFN,KAEgBC,EAFhB,KAIKC,EAAe,SAACC,GAAD,OAAW,SAACC,EAAOC,GACtCJ,IAAYI,GAAaF,KAG3B,OACE,yBAAKG,UAAWT,EAAQd,MACtB,kBAACwB,EAAA,EAAD,CACED,UAAWT,EAAQT,mBACnBY,SAAuB,WAAbA,EACVQ,SAAUN,EAAa,WAEvB,kBAACO,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,CAAgBC,MAAO,CAAEzD,MAAO,WAC5C0D,gBAAc,mBACdC,GAAG,mBAEH,kBAACC,EAAA,EAAD,CAAYR,UAAWT,EAAQpC,SAAS,kBAAC,IAAD,OACxC,kBAACqD,EAAA,EAAD,CAAYR,UAAWT,EAAQjC,kBAC7B,kDAGJ,kBAACmD,EAAA,EAAD,CAAuBT,UAAWT,EAAQT,mBAAoB4B,MAAM,QAClE,4BACGrB,EAAasB,KAAI,SAACC,GAAD,OAChB,wBAAIC,IAAKD,EAAQL,IACf,kBAACO,EAAA,EAAD,CACEC,KAAI,6BAAwBH,EAAQ9C,MACpClB,MAAM,UACNoE,OAAO,UAENJ,EAAQ9C,WAGT,4BAIZ,kBAACmC,EAAA,EAAD,CACED,UAAWT,EAAQT,mBACnBY,SAAuB,WAAbA,EACVQ,SAAUN,EAAa,WAEvB,kBAACO,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,CAAgBC,MAAO,CAAEzD,MAAO,WAC5C0D,gBAAc,mBACdC,GAAG,mBAEH,kBAACC,EAAA,EAAD,CAAYR,UAAWT,EAAQpC,SAAS,kBAAC,IAAD,OACxC,kBAACqD,EAAA,EAAD,CAAYR,UAAWT,EAAQjC,kBAC7B,4DAGJ,kBAACmD,EAAA,EAAD,CAAuBT,UAAWT,EAAQT,mBAAoB4B,MAAM,UAClE,kBAAC,WAAD,CACEV,UAAWT,EAAQP,SACnBiC,KAAM1D,EAAuBC,GAC7B0D,MAAO,gBAAGC,EAAH,EAAGA,UAAH,gBAAsBA,EAAU/C,MAAhC,aAA0C+C,EAAU9C,YAIjE,kBAAC4B,EAAA,EAAD,CACED,UAAWT,EAAQT,mBACnBY,SAAuB,WAAbA,EACVQ,SAAUN,EAAa,WAEvB,kBAACO,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,CAAgBC,MAAO,CAAEzD,MAAO,WAC5C0D,gBAAc,mBACdC,GAAG,mBAEH,kBAACC,EAAA,EAAD,CAAYR,UAAWT,EAAQpC,SAAS,kBAAC,IAAD,OACxC,kBAACqD,EAAA,EAAD,CAAYR,UAAWT,EAAQjC,kBAC7B,oDAGJ,kBAACmD,EAAA,EAAD,CAAuBT,UAAWT,EAAQT,mBAAoB4B,MAAM,QAClE,kBAACF,EAAA,EAAD,KF9EH,SAA4BY,GAEjC,IADA,IAAMC,EAAY,GAClB,MAAgBtD,OAAOuD,KAAKF,EAAM,IAAlC,eAAuC,CAAlC,IAAMnD,EAAC,KACVoD,EAAUlD,KAAV,uCAA+CF,EAAEsD,gBAEnD,OAAOF,EE0EIG,CAAmBlC,GAAeqB,KAAI,SAACc,GAAD,OACrC,yBAAKzB,UAAWT,EAAQR,UAAW2C,IAAKD,EAASE,IAAKF,WCrFrD,SAASG,EAAT,GAEX,IADFxD,EACC,EADDA,MAAOyD,EACN,EADMA,YAAaC,EACnB,EADmBA,WAAYxC,EAC/B,EAD+BA,cAAeD,EAC9C,EAD8CA,aAAc7B,EAC5D,EAD4DA,QAASuE,EACrE,EADqEA,QAEhExC,EAAUvD,IAEhB,OACE,kBAACgG,EAAA,EAAD,CACEhC,UAAWT,EAAQrD,MAEnB,kBAAC+F,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CACER,UAAWT,EAAQ5C,WACnBuF,cAAY,GAEX9D,GAAS,mBAEZ,kBAAC+D,EAAA,EAAD,CAAOC,UAAW,EAAGpC,UAAWT,EAAQhD,WACtC,kBAACiE,EAAA,EAAD,KACGqB,GAAe,yBAElB,6BACA,kBAACrB,EAAA,EAAD,CAAY6B,UAAU,MACnB,gBACD,gCACE,0DAEMN,EAAQO,eAAe,UAAW,CAAEC,MAAO,SAFjD,+BAGMR,EAAQS,UAHd,gCAIMT,EAAQU,cAJd,yBAgBJ,6BACA,kBAACC,EAAA,EAAD,CAAgB1C,UAAWT,EAAQtC,SACjC,kBAAC0F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE7B,KAAI,UAAKe,EAAL,gBACJd,OAAO,SACP6B,QAAQ,YACRjG,MAAM,UACNoD,UAAWT,EAAQuD,OACnBC,UAAW,kBAAC,IAAD,OANb,UAUA,kBAACH,EAAA,EAAD,CACE7B,KAAI,sCAAiC3C,GACrC4C,OAAO,SACP6B,QAAQ,YACRjG,MAAM,UACNoD,UAAWT,EAAQuD,OACnBC,UAAW,kBAAC,IAAD,OANb,YAqBR,kBAAC,EAAD,CACE1D,aAAcA,EACd7B,QAASA,EACT8B,cAAeA,KC7FvB,SAAS0D,EAASC,GAChB,OAAIA,EACKC,QAAQC,IACbF,EAAKtC,KAAI,SAACyC,GAAD,OAASC,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIC,cAG5C,GAIT,SAASC,EAAWC,GAElB,IADA,IAAMC,EAAO,GACJ/F,EAAI,EAAGA,EAAI8F,EAAE7F,OAAQD,GAAK,EACjC+F,EAAKxF,KAAK,IACVwF,EAAK/F,GAAGJ,QAAUkG,EAAE9F,GAAGJ,QACvBmG,EAAK/F,GAAGgG,SAAWF,EAAE9F,GAAGgG,SACxBD,EAAK/F,GAAGiG,WAAaH,EAAE9F,GAAGiG,WAC1BF,EAAK/F,GAAGiE,YAAc6B,EAAE9F,GAAGiE,YAC3B8B,EAAK/F,GAAGkG,SAAWJ,EAAE9F,GAAGkG,SACxBH,EAAK/F,GAAG2C,GAAKmD,EAAE9F,GAAG2C,GAClBoD,EAAK/F,GAAGwD,MAAQsC,EAAE9F,GAAGwD,MACrBuC,EAAK/F,GAAGmG,KAAOL,EAAE9F,GAAGmG,KAEtB,OAAOJ,EAGT,SAASK,EAAsB/C,EAAMgD,GAEnC,IADA,IAAIC,EAAQ,GACHtG,EAAI,EAAGA,EAAIqG,EAAIpG,OAAQD,GAAK,EAAG,CACtCsG,EAAQ,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIrG,GAAGC,OAAQsG,GAAK,EAClCF,EAAIrG,GAAGuG,IACTD,EAAM/F,KAAK,CACToC,GAAI0D,EAAIrG,GAAGuG,GAAG5D,GACdzC,KAAMmG,EAAIrG,GAAGuG,GAAGC,QAItBnD,EAAKrD,GAAGgG,SAAWM,GAIvB,SAASG,EAAqBpD,EAAMqD,GAElC,IADA,IAAI9G,EAAU,GACLI,EAAI,EAAGA,EAAI0G,EAAIzG,OAAQD,GAAK,EAAG,CACtCJ,EAAU,GACV,IAAK,IAAI2G,EAAI,EAAGA,EAAIG,EAAI1G,GAAGC,OAAQsG,GAAK,EAClCG,EAAI1G,GAAGuG,GAAGI,WACZ/G,EAAQW,KAAK,CACXoC,GAAI+D,EAAI1G,GAAGuG,GAAGK,IACd1G,KAAMwG,EAAI1G,GAAGuG,GAAGI,UAAUH,QAIhCnD,EAAKrD,GAAGJ,QAAUA,GAItB,SAASiH,EAAmBxD,EAAMG,GAEhC,IADA,IAAIsD,EAAY,GACP9G,EAAI,EAAGA,EAAIwD,EAAMvD,OAAQD,GAAK,GACrC8G,EAAY,IACFvG,KAAKiD,EAAMxD,IACrBqD,EAAKrD,GAAGwD,MAAQsD,EAIL,SAAeC,EAA9B,kC,4CAAe,WAA2B1D,GAA3B,qBAAA2D,EAAA,sDAMb,GALMC,EAAmB,GACnBC,EAAgB,GAChBC,EAAc,GAEhBnH,EAAI,EACJqD,EAAM,CACR,IAAKrD,EAAI,EAAGA,EAAIqD,EAAKpD,OAAQD,GAAK,EAChCiH,EAAiB1G,KAAK8C,EAAKrD,GAAGoH,kBAEhC,IAAKpH,EAAI,EAAGA,EAAIqD,EAAKpD,OAAQD,GAAK,EAChCkH,EAAc3G,KAAK8C,EAAKrD,GAAGqH,eAE7B,IAAKrH,EAAI,EAAGA,EAAIqD,EAAKpD,OAAQD,GAAK,EAChCmH,EAAY5G,KAAK8C,EAAKrD,GAAGsH,YAAYC,MAAM,GAAI,IAdtC,gBAkBPnC,EAAS6B,GAAkBvB,MAAK,SAACW,GAAD,OAASD,EAAsB/C,EAAMgD,MAlB9D,uBAoBPjB,EAAS8B,GAAexB,MAAK,SAAClC,GAAD,OAAWqD,EAAmBxD,EAAMG,MApB1D,wBAsBP4B,EAAS+B,GAAazB,MAAK,SAACgB,GAAD,OAASD,EAAqBpD,EAAMqD,MAtBxD,iCAwBNb,EAAWxC,IAxBL,6C,sBChEA,SAASmE,IAAO,IAAD,EACU3F,mBAAS,IADnB,mBACrB4F,EADqB,KACRC,EADQ,KAkB5B,OAfAC,qBAAU,YACW,uCAAG,WAAOnC,GAAP,SAAAwB,EAAA,+EAAevB,MAAMD,GACxCE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAKlBF,MAAK,SAACC,GAAD,OAASoB,EAAYpB,GACxBD,MAAK,SAACrC,GAAD,OAAUqE,EAAerE,UAPb,2CAAH,sDASnBuE,CAAc,kDAGhB,IAGE,yBAAKxF,UAAU,OACb,kDACA,kBAACyF,EAAA,EAAD,CACEC,WAAS,EACTrF,MAAO,CAAE5D,QAAS,UAEjB4I,EAAY1E,KAAI,SAACgF,GAAD,OACf,kBAACF,EAAA,EAAD,CACEG,MAAI,EACJvF,MAAO,CAAE5D,QAAS,OAElBoJ,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJpF,IAAK8E,EAAQpF,IAEb,kBAACqB,EAAD,CACExD,MAAOuH,EAAQ5B,KACflC,YAAa8D,EAAQ9D,YACrBC,WAAY6D,EAAQ7B,SACpBxE,cAAeqG,EAAQvE,MACvB/B,aAAcsG,EAAQ/B,SACtBpG,QAASmI,EAAQnI,QACjBuE,QAAS,IAAImE,KAAKP,EAAQ9B,YAC1BhD,IAAK8E,EAAQpF,WHoE3BnB,EAAsB+G,aAAe,CACnC9G,aAAc,GACd7B,QAAS,GACT8B,cAAe,ICPjBsC,EAAYuE,aAAe,CACzB/H,MAAO,GACPyD,YAAa,GACbC,WAAY,GACZxC,cAAe,GACfD,aAAc,GACd7B,QAAS,GACTuE,QAAS,IAAImE,MGhHKE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEP,kBAAC,IAAMC,WAAP,KACE,kBAACvB,EAAD,OAEFwB,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAA2D,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3f887f3f.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n// eslint-disable-next-line no-unused-vars\nlet useStyles;\nexport default useStyles = makeStyles({\n  card: {\n    flexGrow: 1,\n    backgroundColor: '#f7d2ff',\n    borderRadius: 12,\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n                0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n    // transition: 'all .2s ease-in-out',\n    // '&:hover': {\n    //   transform: 'scale(1.01)',\n    // },\n  },\n  paperBack: {\n    background: 'linear-gradient(45deg, #5edf4d96, #58ccdc)',\n    borderRadius: 16,\n    padding: '0.8em',\n    paddingBottom: '0.5em',\n  },\n  fancyTitle: {\n    color: '#122715',\n    fontFamily: 'Segoe UI',\n    fontSize: '1.4em',\n    fontWeight: 'bold',\n  },\n  coloredArrowEmoji: {\n    color: '#3f51b5',\n    fontSize: '0.8em',\n  },\n  flexing: {\n    display: 'flex',\n  },\n  heading: {\n    fontSize: '0.8em',\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: '0.8em',\n  },\n});\n","import randomColor from 'randomcolor';\n\n/* eslint-disable no-restricted-syntax */\nexport function formatCommitsToPieData(commits) {\n  const userCounts = {};\n  const commitData = [];\n  let defaultSeed = 'tonymakis';\n\n  for (let i = 0; i < commits.length; i += 1) {\n    userCounts[commits[i].user] = 1 + (userCounts[commits[i].user] || 0);\n  }\n\n  for (const [k, v] of Object.entries(userCounts)) {\n    defaultSeed = `${defaultSeed}!`;\n    commitData.push({\n      title: k,\n      value: v,\n      color: randomColor(\n        { seed: defaultSeed },\n      ),\n    });\n  }\n\n  return commitData;\n}\n\nexport function formatLangsImgData(langs) {\n  const langsUrls = [];\n  for (const k of Object.keys(langs[0])) {\n    langsUrls.push(`https://img.icons8.com/color/${k.toLowerCase()}`);\n  }\n  return langsUrls;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n// eslint-disable-next-line no-unused-vars\nlet useStyles;\nexport default useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '1em',\n    width: '93%',\n  },\n  beautifyBackground: {\n    color: 'white',\n    backgroundColor: '#3f51b5',\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n                0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n  },\n  langBadge: {\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n    0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n  },\n  piechart: {\n    width: '50%',\n    borderRadius: '100%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontSize: '0.3em',\n    fontWeight: 'bold',\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n    0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n  },\n  heading: {\n    textShadow: '1px 1px 0px rgba(0,0,0,0.2)',\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: 'white',\n  },\n  secondaryHeading: {\n    textShadow: '1px 1px 0px rgba(0,0,0,0.2)',\n    fontSize: theme.typography.pxToRem(15),\n    color: 'white',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { formatCommitsToPieData, formatLangsImgData } from '../dataFormatting';\nimport useStyles from './CustomExpansionPanelsStyles';\n\nexport default function CustomExpansionPanels({\n  contributors,\n  commits,\n  languagesUsed,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}><PeopleAltIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Contributors</strong>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.beautifyBackground} align=\"left\">\n          <ul>\n            {contributors.map((contrib) => (\n              <li key={contrib.id}>\n                <Link\n                  href={`https://github.com/${contrib.user}`}\n                  color=\"inherit\"\n                  target=\"_blank\"\n                >\n                  {contrib.user}\n                </Link>\n              </li>\n            )) || 'No contributors found!'}\n          </ul>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}><TrackChangesIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Commits By Contributor</strong>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.beautifyBackground} align=\"center\">\n          <PieChart\n            className={classes.piechart}\n            data={formatCommitsToPieData(commits)}\n            label={({ dataEntry }) => `${dataEntry.title}, ${dataEntry.value}`}\n          />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel3'}\n        onChange={handleChange('panel3')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Typography className={classes.heading}><CodeIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Dev. Languages</strong>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.beautifyBackground} align=\"left\">\n          <Typography>\n            {formatLangsImgData(languagesUsed).map((langUrl) => (\n              <img className={classes.langBadge} alt={langUrl} src={langUrl} />\n            ))}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nCustomExpansionPanels.propTypes = {\n  contributors: PropTypes.arrayOf(PropTypes.object),\n  commits: PropTypes.arrayOf(PropTypes.object),\n  languagesUsed: PropTypes.arrayOf(PropTypes.object),\n};\n\nCustomExpansionPanels.defaultProps = {\n  contributors: [],\n  commits: [],\n  languagesUsed: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent,\n  // CardMedia,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\nimport useStyles from './ProjectCardStyles';\n\nimport CustomizedExpansionPanels from '../ExpansionPanelsComponent/CustomExpansionPanels';\n\nexport default function ProjectCard({\n  title, description, projectUrl, languagesUsed, contributors, commits, created,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={classes.card}\n    >\n      <CardContent>\n        <Typography\n          className={classes.fancyTitle}\n          gutterBottom\n        >\n          {title || 'Title TBD . . .'}\n        </Typography>\n        <Paper elevation={3} className={classes.paperBack}>\n          <Typography>\n            {description || 'Description TBD . . .'}\n          </Typography>\n          <br />\n          <Typography component=\"h3\">\n            {'📅 '}\n            <strong>\n              <em>\n                {`\n                  ${created.toLocaleString('default', { month: 'long' })}\n                  ${created.getDate()},\n                  ${created.getFullYear()}\n                `}\n              </em>\n            </strong>\n            {/* &emsp;\n            {'⌛ '}\n            <strong>\n              <em>\n                {`${created.toLocaleString('en-US', { hour: 'numeric', hour12: true })}`}\n              </em>\n            </strong> */}\n          </Typography>\n          <br />\n          <CardActionArea className={classes.flexing}>\n            <CardActions>\n              <Button\n                href={`${projectUrl}/tree/master`}\n                target=\"_blank\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<GitHubIcon />}\n              >\n                SOURCE\n              </Button>\n              <Button\n                href={`https://TonyMakis.github.io/${title}`}\n                target=\"_blank\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<ComputerIcon />}\n              >\n                DEMO\n              </Button>\n            </CardActions>\n          </CardActionArea>\n        </Paper>\n      </CardContent>\n      {/* TODO: PICTURE GENERATION FOR THUMBNAIL (htmltocavas???) */}\n      {/* <CardMedia\n        component=\"img\"\n        alt={name}\n        image={imageUrl}\n      /> */}\n      {/* <TabPanelsGroup contributors={contributors} /> */}\n      <CustomizedExpansionPanels\n        contributors={contributors}\n        commits={commits}\n        languagesUsed={languagesUsed}\n      />\n    </Card>\n  );\n}\n\n// Validation of props passed to @UserCard\n//  -> Including Some Default Values:\n\nProjectCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  projectUrl: PropTypes.string,\n  languagesUsed: PropTypes.arrayOf(PropTypes.object),\n  contributors: PropTypes.arrayOf(PropTypes.object),\n  commits: PropTypes.arrayOf(PropTypes.object),\n  created: PropTypes.instanceOf(Date),\n};\n\nProjectCard.defaultProps = {\n  title: '',\n  description: '',\n  projectUrl: '',\n  languagesUsed: [],\n  contributors: [],\n  commits: [],\n  created: new Date(),\n};\n","// This next comment is for ESLint, b/c I am writing fetched results into original data:\n/* eslint-disable no-param-reassign */\n\n/* Takes an array of urls to fetch, and does fetch all,\n   returning results in JSONic array */\nfunction fetchAll(urls) {\n  if (urls) {\n    return Promise.all(\n      urls.map((url) => fetch(url).then((res) => res.json())),\n    );\n  }\n  return [];\n}\n\n/* Simply make a new data object with props actually needed */\nfunction filterData(d) {\n  const newD = [];\n  for (let i = 0; i < d.length; i += 1) {\n    newD.push({});\n    newD[i].commits = d[i].commits;\n    newD[i].contribs = d[i].contribs;\n    newD[i].created_at = d[i].created_at;\n    newD[i].description = d[i].description;\n    newD[i].html_url = d[i].html_url;\n    newD[i].id = d[i].id;\n    newD[i].langs = d[i].langs;\n    newD[i].name = d[i].name;\n  }\n  return newD;\n}\n\nfunction parseContribsIntoData(data, con) {\n  let users = [];\n  for (let i = 0; i < con.length; i += 1) {\n    users = [];\n    for (let j = 0; j < con[i].length; j += 1) {\n      if (con[i][j]) {\n        users.push({\n          id: con[i][j].id,\n          user: con[i][j].login,\n        });\n      }\n    }\n    data[i].contribs = users;\n  }\n}\n\nfunction parseCommitsIntoData(data, com) {\n  let commits = [];\n  for (let i = 0; i < com.length; i += 1) {\n    commits = [];\n    for (let j = 0; j < com[i].length; j += 1) {\n      if (com[i][j].committer) {\n        commits.push({\n          id: com[i][j].sha,\n          user: com[i][j].committer.login,\n        });\n      }\n    }\n    data[i].commits = commits;\n  }\n}\n\nfunction parseLangsIntoData(data, langs) {\n  let languages = [];\n  for (let i = 0; i < langs.length; i += 1) {\n    languages = [];\n    languages.push(langs[i]);\n    data[i].langs = languages;\n  }\n}\n\nexport default async function fetchExtras(data) {\n  const contributorsUrls = [];\n  const languagesUrls = [];\n  const commitsUrls = [];\n\n  let i = 0;\n  if (data) {\n    for (i = 0; i < data.length; i += 1) {\n      contributorsUrls.push(data[i].contributors_url);\n    }\n    for (i = 0; i < data.length; i += 1) {\n      languagesUrls.push(data[i].languages_url);\n    }\n    for (i = 0; i < data.length; i += 1) {\n      commitsUrls.push(data[i].commits_url.slice(0, -6));\n    }\n  }\n\n  await fetchAll(contributorsUrls).then((con) => parseContribsIntoData(data, con));\n\n  await fetchAll(languagesUrls).then((langs) => parseLangsIntoData(data, langs));\n\n  await fetchAll(commitsUrls).then((com) => parseCommitsIntoData(data, com));\n\n  return filterData(data);\n}\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ProjectCard from './ProjectCardComponent/ProjectCard';\n\nimport fetchExtras from './dataFetchFunctions';\n\nexport default function App() {\n  const [projectData, setProjectData] = useState([]);\n\n  useEffect(() => {\n    const fetchProjects = async (url) => fetch(url)\n      .then((res) => res.json())\n      // Uncomment next line and comment 2 after\n      // => to fetch ONLY the main repo data, not the discovered\n      //    git commit, contributors, and languages data it links\n      // .then((res) => setProjectData(res));\n      .then((res) => fetchExtras(res)\n        .then((data) => setProjectData(data)));\n\n    fetchProjects('https://api.github.com/users/TonyMakis/repos');\n  },\n  // The next line keeps useEffect from propogating > 1 time.\n  []);\n\n  return (\n    <div className=\"App\">\n      <h1>My Public Projects</h1>\n      <Grid\n        container\n        style={{ padding: '0.5em' }}\n      >\n        {projectData.map((project) => (\n          <Grid\n            item\n            style={{ padding: '2em' }}\n            // Tell each card how many cols to span / device size\n            xs={12}\n            sm={12}\n            md={6}\n            lg={4}\n            xl={3}\n            key={project.id}\n          >\n            <ProjectCard\n              title={project.name}\n              description={project.description}\n              projectUrl={project.html_url}\n              languagesUsed={project.langs}\n              contributors={project.contribs}\n              commits={project.commits}\n              created={new Date(project.created_at)}\n              key={project.id}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}