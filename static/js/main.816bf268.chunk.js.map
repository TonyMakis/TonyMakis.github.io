{"version":3,"sources":["ProjectCardComponent/ProjectCardStyles.js","ExpansionPanelsComponent/CustomExpansionPanelsStyles.js","ExpansionPanelsComponent/CustomExpansionPanels.jsx","ProjectCardComponent/ProjectCard.jsx","dataFunctions.js","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","flexGrow","backgroundColor","borderRadius","boxShadow","paperBack","fontWeight","background","padding","paddingBottom","fancyTitle","color","fontFamily","fontSize","coloredArrowEmoji","flexing","display","heading","flexBasis","flexShrink","secondaryHeading","theme","root","marginLeft","marginRight","marginBottom","width","beautifyBackground","textShadow","typography","pxToRem","CustomExpansionPanels","contributors","classes","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","className","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","style","aria-controls","id","Typography","ExpansionPanelDetails","align","map","contrib","component","ProjectCard","title","description","projectUrl","created","Card","CardContent","gutterBottom","Paper","elevation","toLocaleString","month","getDate","getFullYear","CardActionArea","CardActions","Button","href","target","variant","button","startIcon","fetchAll","urls","Promise","all","url","fetch","then","res","json","filterData","d","newD","i","length","push","contribs","created_at","html_url","name","fetchExtras","data","a","j","users","contributorsUrls","languagesUrls","commitsUrls","contributors_url","languages_url","commits_url","slice","con","login","App","projectData","setProjectData","useEffect","fetchProjects","Grid","container","projects","item","xs","sm","md","lg","xl","key","languagesUsed","langs","commits","Date","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.816bf268.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n// eslint-disable-next-line no-unused-vars\nlet useStyles;\nexport default useStyles = makeStyles({\n  card: {\n    flexGrow: 1,\n    backgroundColor: '#f7d2ff',\n    borderRadius: 12,\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n                0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n    // transition: 'all .2s ease-in-out',\n    // '&:hover': {\n    //   transform: 'scale(1.01)',\n    // },\n  },\n  paperBack: {\n    fontWeight: 'bold',\n    background: 'linear-gradient(45deg, #5edf4d96, #58ccdc)',\n    borderRadius: 16,\n    padding: '0.8em',\n    paddingBottom: '0.5em',\n  },\n  fancyTitle: {\n    color: '#122715',\n    fontFamily: 'Segoe UI',\n    fontSize: '1.4em',\n    fontWeight: 'bold',\n  },\n  coloredArrowEmoji: {\n    color: '#3f51b5',\n    fontSize: '0.8em',\n  },\n  flexing: {\n    display: 'flex',\n  },\n  heading: {\n    fontSize: '0.8em',\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: '0.8em',\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n// eslint-disable-next-line no-unused-vars\nlet useStyles;\nexport default useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '1em',\n    width: '93%',\n  },\n  beautifyBackground: {\n    color: 'white',\n    backgroundColor: '#3f51b5',\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), \n                0 6px 20px 0 rgba(0, 0, 0, 0.4)`,\n  },\n  heading: {\n    textShadow: '1px 1px 0px rgba(0,0,0,0.2)',\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: 'white',\n  },\n  secondaryHeading: {\n    textShadow: '1px 1px 0px rgba(0,0,0,0.2)',\n    fontSize: theme.typography.pxToRem(15),\n    color: 'white',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n} from '@material-ui/core';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport useStyles from './CustomExpansionPanelsStyles';\n\nexport default function CustomExpansionPanels({ contributors }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}><PeopleAltIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Contributors</strong>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.beautifyBackground} align=\"left\">\n          <ul>\n            {contributors.map((contrib) => (\n              <li><Typography component=\"h4\"><em>{contrib}</em></Typography></li>\n            )) || 'No contributors found!'}\n          </ul>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}><TrackChangesIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Commit Info</strong>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.beautifyBackground} align=\"left\">\n          <Typography>\n            Donec placerat,\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        className={classes.beautifyBackground}\n        expanded={expanded === 'panel3'}\n        onChange={handleChange('panel3')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Typography className={classes.heading}><CodeIcon /></Typography>\n          <Typography className={classes.secondaryHeading}>\n            <strong>Dev. Languages</strong>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.beautifyBackground} align=\"left\">\n          <Typography>\n            Nunc vitae\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nCustomExpansionPanels.propTypes = {\n  contributors: PropTypes.arrayOf(PropTypes.string),\n};\n\nCustomExpansionPanels.defaultProps = {\n  contributors: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent,\n  // CardMedia,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\nimport useStyles from './ProjectCardStyles';\n\nimport CustomizedExpansionPanels from '../ExpansionPanelsComponent/CustomExpansionPanels';\n\nexport default function ProjectCard({\n  title, description, projectUrl, contributors, created,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={classes.card}\n    >\n      <CardContent>\n        <Typography\n          className={classes.fancyTitle}\n          gutterBottom\n        >\n          {title || 'Title TBD . . .'}\n        </Typography>\n        <Paper elevation={3} className={classes.paperBack}>\n          <Typography>\n            {description || 'Description TBD . . .'}\n          </Typography>\n          <br />\n          <Typography component=\"h3\">\n            <strong className={classes.coloredArrowEmoji}>{'⮞ '}</strong>\n            {'📅 '}\n            <strong>\n              <em>\n                {`${created.toLocaleString('default', { month: 'long' })}\n                  ${created.getDate()},\n                  ${created.getFullYear()}`}\n              </em>\n            </strong>\n            {/* &emsp;\n            {'⌛ '}\n            <strong>\n              <em>\n                {`${created.toLocaleString('en-US', { hour: 'numeric', hour12: true })}`}\n              </em>\n            </strong> */}\n          </Typography>\n          <br />\n          <CardActionArea className={classes.flexing}>\n            <CardActions>\n              <Button\n                href={`${projectUrl}/tree/master`}\n                target=\"_blank\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<GitHubIcon />}\n              >\n                SOURCE\n              </Button>\n              <Button\n                href={`https://TonyMakis.github.io/${title}`}\n                target=\"_blank\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<ComputerIcon />}\n              >\n                DEMO\n              </Button>\n            </CardActions>\n          </CardActionArea>\n        </Paper>\n      </CardContent>\n      {/* TODO: PICTURE GENERATION FOR THUMBNAIL (htmltocavas???) */}\n      {/* <CardMedia\n        component=\"img\"\n        alt={name}\n        image={imageUrl}\n      /> */}\n      {/* <TabPanelsGroup contributors={contributors} /> */}\n      <CustomizedExpansionPanels contributors={contributors} />\n    </Card>\n  );\n}\n\n// Validation of props passed to @UserCard\n//  -> Including Some Default Values:\n\nProjectCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  projectUrl: PropTypes.string,\n  contributors: PropTypes.arrayOf(PropTypes.string),\n  created: PropTypes.instanceOf(Date),\n};\n\nProjectCard.defaultProps = {\n  title: '',\n  description: '',\n  projectUrl: '',\n  contributors: [],\n  created: new Date(),\n};\n","/* eslint-disable no-param-reassign */\n\nfunction fetchAll(urls) {\n  if (urls) {\n    return Promise.all(\n      urls.map((url) => fetch(url).then((res) => res.json())),\n    );\n  }\n  return [];\n}\n\n/* Simply make a new data object with props actually needed */\nfunction filterData(d) {\n  const newD = [];\n  for (let i = 0; i < d.length; i += 1) {\n    newD.push({});\n    //     newD[i].commits = d[i].commits;\n    newD[i].contribs = d[i].contribs;\n    newD[i].created_at = d[i].created_at;\n    newD[i].description = d[i].description;\n    newD[i].html_url = d[i].html_url;\n    newD[i].id = d[i].id;\n    //     newD[i].langs = d[i].langs;\n    newD[i].name = d[i].name;\n  }\n  return newD;\n}\n\nexport default async function fetchExtras(data) {\n  let i = 0;\n  let j = 0;\n  let users = [];\n  // let languages = [];\n  // let commits = [];\n  const contributorsUrls = [];\n  const languagesUrls = [];\n  const commitsUrls = [];\n\n  if (data) {\n    for (i; i < data.length; i += 1) {\n      contributorsUrls.push(data[i].contributors_url);\n    }\n    for (i = 0; i < data.length; i += 1) {\n      languagesUrls.push(data[i].languages_url);\n    }\n    for (i = 0; i < data.length; i += 1) {\n      commitsUrls.push(data[i].commits_url.slice(0, -6));\n    }\n  }\n\n  await fetchAll(contributorsUrls).then((con) => {\n    for (i = 0; i < con.length; i += 1) {\n      users = [];\n      for (j = 0; j < con[i].length; j += 1) {\n        users.push(con[i][j].login);\n      }\n      data[i].contribs = users;\n    }\n  });\n\n  // fetchAll(languagesUrls).then((langs) => {\n  //   for (i = 0; i < langs.length; i += 1) {\n  //     for (j = 0; i < langs.length; i += 1) {\n  //       languages.push(langs[i][j]);\n  //     }\n  //   }\n  //   // eslint-disable-next-line no-param-reassign\n  //   data[i].langs = languages;\n  // });\n  // fetchAll(commitsUrls).then((com) => {\n  //   for (i = 0; i < com.length; i += 1) {\n  //     // eslint-disable-next-line no-param-reassign\n  //     data[i].commits = com[i];\n  //   }\n  // });\n  return filterData(data);\n}\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ProjectCard from './ProjectCardComponent/ProjectCard';\n\nimport fetchExtras from './dataFunctions';\n\nexport default function App() {\n  const [projectData, setProjectData] = useState([]);\n\n  useEffect(() => {\n    const fetchProjects = async (url) => fetch(url)\n      .then((res) => res.json())\n      // Uncomment next line and comment 2 after\n      // => to fetch ONLY the main repo data, not the discovered\n      //    git commit, contributors, and languages data it links\n      // .then((res) => setProjectData(res));\n      .then((res) => fetchExtras(res)\n        .then((data) => setProjectData(data)));\n\n    fetchProjects('https://api.github.com/users/TonyMakis/repos');\n  },\n  // The next line keeps useEffect from propogating > 1 time.\n  []);\n\n  return (\n    <div className=\"App\">\n      <h1>My Public Projects</h1>\n      <Grid\n        container\n        style={{ padding: '0.5em' }}\n      >\n        {projectData.map((projects) => (\n          <Grid\n            item\n            style={{ padding: '2em' }}\n            // Tell each card how many cols to span / device size\n            xs={12}\n            sm={12}\n            md={6}\n            lg={4}\n            xl={3}\n            key={projects.id}\n          >\n            <ProjectCard\n              title={projects.name}\n              description={projects.description}\n              projectUrl={projects.html_url}\n              languagesUsed={projects.langs}\n              contributors={projects.contribs}\n              commits={projects.commits}\n              created={new Date(projects.created_at)}\n              key={projects.id}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}